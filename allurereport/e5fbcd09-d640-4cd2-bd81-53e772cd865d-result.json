{"name": "test_service_nav", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "def test_service_nav():     # მხოლოდ ეს ფუნქცია უნდა იყოს წარუმატებელი (კომუნალური გადახდები/კომუნალური გადასახადები)\n        driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver.get(\"https://tbcpay.ge/\")\n        servicelink = driver.find_element_by_link_text(\"სერვისები\")\n        servicelink.click()\n        try:\n>           mylist = WebDriverWait(driver, 10).until(ec.presence_of_element_located((By.CLASS_NAME, \"sc-YY1t1ypb4-0\")))\n\nTbcPayTest\\test.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8fa704bac46adc89a293862e2a74460e\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x000002564E5CDBB0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_service_nav():     # მხოლოდ ეს ფუნქცია უნდა იყოს წარუმატებელი (კომუნალური გადახდები/კომუნალური გადასახადები)\n        driver = webdriver.Chrome(ChromeDriverManager().install())\n        driver.get(\"https://tbcpay.ge/\")\n        servicelink = driver.find_element_by_link_text(\"სერვისები\")\n        servicelink.click()\n        try:\n            mylist = WebDriverWait(driver, 10).until(ec.presence_of_element_located((By.CLASS_NAME, \"sc-YY1t1ypb4-0\")))\n            listitems = mylist.find_elements_by_class_name(\"name\")\n            itemstocheck = {\"პოპულარული სერვისები\", \"მობილური კავშირი\", \"ბანკები დაზღვევა მიკროსაფინანსო\",\n                            \"ტოტალიზატორები კაზინო ლატარია\", \"ინტერნეტი ტელეფონი ტელევიზია\", \"კომუნალური გადახდები\",\n                            \"ტრანსპორტი\", \"სახელმწიფო სერვისები\", \"სხვადასხვა\"}\n            existingitemsset = set()\n            for item in listitems:\n                existingitemsset.add(item.text)\n            if itemstocheck - existingitemsset == set():\n                allure.attach(driver.get_screenshot_as_png(), name=\"ServiceNavSuccess\", attachment_type=AttachmentType.PNG)\n                driver.quit()\n            else:\n                allure.attach(driver.get_screenshot_as_png(), name=\"ServiceNavFailure\", attachment_type=AttachmentType.PNG)\n                driver.quit()\n                assert False\n        except TimeoutException:\n            allure.attach(driver.get_screenshot_as_png(), name=\"ServiceNavFailure\", attachment_type=AttachmentType.PNG)\n            driver.quit()\n>           assert False\nE           assert False\n\nTbcPayTest\\test.py:64: AssertionError"}, "attachments": [{"name": "ServiceNavFailure", "source": "2719ba76-164b-4489-9f82-d0b90798df92-attachment.png", "type": "image/png"}, {"name": "log", "source": "2e9e2e2c-c147-4931-a1cf-eafa97327334-attachment.txt", "type": "text/plain"}], "start": 1615964594646, "stop": 1615964614167, "uuid": "582c65d3-db23-4e66-a115-463eaf19a8a9", "historyId": "dbe25360975cf5a3170857316eee9a72", "testCaseId": "a31edf518e754dfc7e36cbe781e1b086", "fullName": "TbcPayTest.test#test_service_nav", "labels": [{"name": "parentSuite", "value": "TbcPayTest"}, {"name": "suite", "value": "test"}, {"name": "host", "value": "DESKTOP-0MLGALH"}, {"name": "thread", "value": "12200-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TbcPayTest.test"}]}